/*
 * Monokai Pro (Filter Ristretto) Chroma/Code Highlight Styles
 * Based on: https://monokai.pro/
 *
 * This file styles code blocks generated by syntax highlighters (e.g., Chroma for Python).
 */

/* Root variables for Monokai Pro Ristretto colors (repeated for clarity and direct use in this file) */
:root {
    --monokai-background: #1A1B1C; /* Dark background */
    --monokai-foreground: #B0B0B0; /* Light grey text */
    --monokai-comment: #6B6D6E;    /* Grey comments */
    --monokai-red: #FC504E;       /* Red for errors/important */
    --monokai-orange: #FD971F;    /* Orange for strings/numbers */
    --monokai-yellow: #E6DB74;    /* Yellow for function names/keywords */
    --monokai-green: #A6E22E;     /* Green for success/keywords */
    --monokai-blue: #66D9EF;      /* Blue for types/keywords */
    --monokai-purple: #AE81FF;    /* Purple for operators/keywords */
    --monokai-light-grey: #CCC;
}

/* --- Code Block Container --- */
.highlight > pre {
    white-space: pre-wrap; /* KEEPING ORIGINAL STYLE */
    border: 1px solid var(--monokai-comment); /* Subtle border */
    line-height: 1.42857143; /* KEEPING ORIGINAL LINE HEIGHT */
    padding: 1em; /* KEEPING ORIGINAL PADDING */
    border-radius: 6px; /* KEEPING ORIGINAL BORDER RADIUS */
    background-color: var(--monokai-background) !important; /* Applied new color, forced due to existing inline styles */
    color: var(--monokai-foreground); /* Applied new color */
    font-family: 'Roboto Mono', monospace; /* Applied new font */
    font-size: 0.9em; /* Slightly smaller for code */
}

pre {
    border: 1px solid var(--monokai-comment) !important; /* Applied new color, forced due to existing inline styles */
    padding: 6px; /* KEEPING ORIGINAL PADDING */
    font-weight: bold; /* KEEPING ORIGINAL FONT WEIGHT */
    background-color: var(--monokai-background); /* Applied new color */
    color: var(--monokai-foreground); /* Applied new color */
    font-family: 'Roboto Mono', monospace; /* Applied new font */
}

pre code {
    white-space: pre-wrap; /* KEEPING ORIGINAL STYLE */
    overflow-wrap: break-word; /* KEEPING ORIGINAL STYLE */
}

/* --- Chroma Specific Styles (Monokai Pro Ristretto Palette) --- */
.chroma { background-color: var(--monokai-background); color: var(--monokai-foreground); } /* Applied new colors */

/* Error */ .chroma .err { color: var(--monokai-red); }

/* Line Numbering and Highlighting - KEEPING ORIGINAL STRUCTURES */
.chroma .lntd { ; vertical-align: top; padding: 0; margin: 0; border: 0; }
.chroma .lntable { ; border-spacing: 0; padding: 0; margin: 0; border: 0; width: 100%; overflow: auto; display: block; }
.chroma .hl { background-color: rgba(253, 151, 31, 0.15); /* Subtle orange highlight */ display: block; width: 100% } /* LineHighlight */
.chroma .lnt { ; margin-right: 0.4em; padding: 0 0.4em 0 0.4em; display: block; color: var(--monokai-comment); } /* LineNumbersTable */
.chroma .ln { ; margin-right: 0.4em; padding: 0 0.4em 0 0.4em; color: var(--monokai-comment); } /* LineNumbers */

/* Keywords */
.chroma .k { color: var(--monokai-green); font-weight: bold; } /* Keyword */
.chroma .kc { color: var(--monokai-green); font-weight: bold; } /* KeywordConstant */
.chroma .kd { color: var(--monokai-green); font-weight: bold; } /* KeywordDeclaration */
.chroma .kn { color: var(--monokai-green); font-weight: bold; } /* KeywordNamespace */
.chroma .kp { color: var(--monokai-blue); font-weight: bold; } /* KeywordPseudo */
.chroma .kr { color: var(--monokai-red); font-weight: bold; } /* KeywordReserved */
.chroma .kt { color: var(--monokai-blue); font-weight: bold; } /* KeywordType */

/* Names / Identifiers */
.chroma .n { color: var(--monokai-foreground); } /* Name (default) */
.chroma .na { color: var(--monokai-yellow); } /* NameAttribute */
.chroma .nb { color: var(--monokai-blue); } /* NameBuiltin */
.chroma .nc { color: var(--monokai-yellow); font-weight: bold; } /* NameClass */
.chroma .no { color: var(--monokai-blue); font-weight: bold; } /* NameConstant */
.chroma .nd { color: var(--monokai-green); font-weight: bold; } /* NameDecorator */
.chroma .ni { color: var(--monokai-foreground); } /* NameEntity */
.chroma .ne { color: var(--monokai-red); font-weight: bold; } /* NameException */
.chroma .nf { color: var(--monokai-yellow); font-weight: bold; } /* NameFunction */
.chroma .nl { color: var(--monokai-blue); font-weight: bold; } /* NameLabel */
.chroma .nn { color: var(--monokai-yellow); font-weight: bold; } /* NameNamespace */
.chroma .nt { color: var(--monokai-red); } /* NameTag */
.chroma .nv { color: var(--monokai-blue); } /* NameVariable */
.chroma .vc { color: var(--monokai-blue); } /* NameVariableClass */
.chroma .vg { color: var(--monokai-blue); } /* NameVariableGlobal */
.chroma .vi { color: var(--monokai-blue); } /* NameVariableInstance */

/* Literals (Strings & Numbers) */
.chroma .s { color: var(--monokai-orange); } /* LiteralString */
.chroma .s1 { color: var(--monokai-orange); } /* LiteralStringAffix */
.chroma .sb { color: var(--monokai-orange); } /* LiteralStringBacktick */
.chroma .sc { color: var(--monokai-orange); } /* LiteralStringChar */
.chroma .sd { color: var(--monokai-orange); } /* LiteralStringDoc */
.chroma .se { color: var(--monokai-orange); font-weight: bold; } /* LiteralStringEscape */
.chroma .si { background-color: rgba(255, 255, 255, 0.1); } /* LiteralStringInterpol (subtle background) */
.chroma .sx { color: var(--monokai-orange); } /* LiteralStringOther */
.chroma .sr { color: var(--monokai-orange); } /* LiteralStringRegex */
.chroma .ss { color: var(--monokai-orange); } /* LiteralStringSymbol */

.chroma .m { color: var(--monokai-purple); font-weight: bold; } /* LiteralNumber */
.chroma .mb { color: var(--monokai-purple); font-weight: bold; } /* LiteralNumberBin */
.chroma .mf { color: var(--monokai-purple); font-weight: bold; } /* LiteralNumberFloat */
.chroma .mh { color: var(--monokai-purple); font-weight: bold; } /* LiteralNumberHex */
.chroma .mi { color: var(--monokai-purple); font-weight: bold; } /* LiteralNumberInteger */
.chroma .il { color: var(--monokai-purple); font-weight: bold; } /* LiteralNumberIntegerLong */
.chroma .mo { color: var(--monokai-purple); font-weight: bold; } /* LiteralNumberOct */

/* Operators */
.chroma .o { color: var(--monokai-purple); } /* Operator */
.chroma .ow { color: var(--monokai-purple); font-weight: bold; } /* OperatorWord */

/* Comments */
.chroma .c { color: var(--monokai-comment); font-style: italic; } /* Comment */
.chroma .ch { color: var(--monokai-comment); font-style: italic; } /* CommentHashbang */
.chroma .cm { color: var(--monokai-comment); font-style: italic; } /* CommentMultiline */
.chroma .c1 { color: var(--monokai-comment); font-style: italic; } /* CommentSingle */
.chroma .cs { color: var(--monokai-comment); font-weight: bold; font-style: italic; } /* CommentSpecial */
.chroma .cp { color: var(--monokai-comment); } /* CommentPreproc */
.chroma .cpf { color: var(--monokai-comment); } /* CommentPreprocFile */

/* Generic (Info/Status) */
.chroma .gd { color: var(--monokai-red); } /* GenericDeleted */
.chroma .ge { font-style: italic; } /* GenericEmph */
.chroma .gr { color: var(--monokai-red); } /* GenericError */
.chroma .gh { color: var(--monokai-blue); font-weight: bold; } /* GenericHeading */
.chroma .gi { color: var(--monokai-green); } /* GenericInserted */
.chroma .go { color: var(--monokai-comment); } /* GenericOutput */
.chroma .gp { color: var(--monokai-orange); font-weight: bold; } /* GenericPrompt */
.chroma .gs { font-weight: bold; } /* GenericStrong */
.chroma .gu { color: var(--monokai-purple); font-weight: bold; } /* GenericSubheading */
.chroma .gt { color: var(--monokai-red); } /* GenericTraceback */
.chroma .w { color: var(--monokai-comment); } /* TextWhitespace */